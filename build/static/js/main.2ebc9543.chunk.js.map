{"version":3,"sources":["imgs/logoMiniburg.png","components/SectionItem.js","components/Section.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SectionItem","props","chooseSelect","e","setState","sizeSelected","target","value","handleBtnSize","id","state","qtdP","qtdM","qtdG","getOrderItem","renderQtdP","Typography","renderQtdM","renderQtdG","renderSubTotalItem","valueP","valueM","valueG","subTotal","parseFloat","substring","className","Box","fontWeight","m","toFixed","item","ingredients","valorP","valorM","valorG","nameItem","variant","this","fontStyle","IconButton","color","aria-label","component","RemoveCircleOutlineOutlined","onClick","fontSize","AddCircleOutlineOutlined","Component","valueItems","Section","getSizesString","tamanhos","ordersItem","itemsOrder","pedido","length","push","find","match","forEach","index","getValueSection","renderItems","map","ref","items","key","bind","Divider","style","margin","nameSection","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Col","FormTemplate","getOrderByClient","handleInput","custumer","console","log","end","complement","Grid","container","spacing","xs","FormControl","TextField","styles","inputText","label","helperText","onChange","placeholder","App","getUrl","url","window","innerWidth","renderSendWhatsApp","Button","disabled","href","formVerify","Container","src","logoMiniburg","alt","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2ebc9543.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoMiniburg.5e28a153.png\";","import React, { Component } from 'react';\nimport { AddCircleOutlineOutlined, RemoveCircleOutlineOutlined } from '@material-ui/icons';\nimport {\n    IconButton,\n    Typography,\n    Box,\n} from '@material-ui/core';\n\nimport '../styles/SectionItem.css'\n\n\nexport default class SectionItem extends Component {\n    constructor(props) {\n        super(props);\n\n        const { item, ingredients, valorP, valorM, valorG } = this.props.item;\n\n        this.state = {\n            nameItem: item,\n            ingredients: ingredients,\n            valueP: valorP,\n            valueM: valorM,\n            valueG: valorG,\n            qtdP: 0,\n            qtdM: 0,\n            qtdG: 0,\n            subTotal: 0,\n        };\n    }\n\n    chooseSelect = (e) => {\n        this.setState({ sizeSelected: e.target.value });\n    }\n\n    handleBtnSize = (e) => {\n        const id = e.target.id;\n\n        const { qtdP, qtdM, qtdG } = this.state;\n\n        if (id === \"btn-add-P\") {\n            this.setState({ qtdP: qtdP + 1 },\n                () => {\n                    const state = this.state;\n                    this.props.getOrderItem(state);\n                }\n            );\n        }\n\n        if (id === \"btn-add-M\") {\n            this.setState({ qtdM: qtdM + 1 },\n                () => {\n                    const state = this.state;\n                    this.props.getOrderItem(state);\n                }\n            );\n        }\n\n        if (id === \"btn-add-G\") {\n            this.setState({ qtdG: qtdG + 1 },\n                () => {\n                    const state = this.state;\n                    this.props.getOrderItem(state);\n                }\n            );\n        }\n\n        if (id === \"btn-remove-P\") {\n            if (qtdP > 0) {\n                this.setState({ qtdP: qtdP - 1 },\n                    () => {\n                        const state = this.state;\n                        this.props.getOrderItem(state);\n                    }\n                );\n            }\n        }\n\n        if (id === \"btn-remove-M\") {\n            if (qtdM > 0) {\n                this.setState({ qtdM: qtdM - 1 },\n                    () => {\n                        const state = this.state;\n                        this.props.getOrderItem(state);\n                    }\n                );\n            }\n        }\n\n        if (id === \"btn-remove-G\") {\n            if (qtdG > 0) {\n                this.setState({ qtdG: qtdG - 1 },\n                    () => {\n                        const state = this.state;\n                        this.props.getOrderItem(state);\n                    }\n                );\n            }\n        }\n        /*this.setState({ quantity: e.target.value },\n            () => {\n                const state = this.state;\n                this.props.getOrderItem(state);\n            }\n        );\n        */\n\n    }\n\n    renderQtdP = () => {\n        if (this.state.qtdP > 0) {\n            return <Typography >{this.state.qtdP}</Typography>\n        }\n    }\n\n    renderQtdM = () => {\n        if (this.state.qtdM !== 0) {\n            return <Typography>{this.state.qtdM}</Typography>\n        }\n    }\n\n    renderQtdG = () => {\n        if (this.state.qtdG > 0) {\n            return <Typography>{this.state.qtdG}</Typography>\n        }\n    }\n\n    renderSubTotalItem = () => {\n        const { valueP, valueM, valueG, qtdP, qtdM, qtdG } = this.state;\n\n        let valP = parseFloat(valueP.substring(2, 7));\n        let valM = parseFloat(valueM.substring(2, 7));\n        let valG = parseFloat(valueG.substring(2, 7));\n\n        let subTotal = (qtdP * valP) + (qtdM * valM) + (qtdG * valG);\n\n\n        if (subTotal > 0) {\n            return <div className=\"subTotal \">\n                <Typography><Box fontWeight=\"fontWeightBold\" m={1}>SubTotal</Box></Typography>\n                <Typography>R$ {subTotal.toFixed(2)}</Typography>\n            </div>\n\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"nameItem\">\n                    <Typography variant='h6'>{this.state.nameItem}</Typography>\n                    <Typography><Box fontStyle=\"oblique\">{this.state.ingredients}</Box></Typography>\n                </div>\n                <div className=\"inputs\">\n                    <div className=\"sectionSize\">\n                        <Typography >P</Typography>\n                        <Typography>{this.state.valueP}</Typography>\n                        <div className=\"btnsAddOrRemove\">\n                            <IconButton color=\"gray\" aria-label=\"add order\" component=\"span\">\n                                <RemoveCircleOutlineOutlined id=\"btn-remove-P\" onClick={this.handleBtnSize} fontSize=\"medium\" />\n                            </IconButton>\n                            <IconButton color=\"gray\" aria-label=\"add order\" component=\"span\">\n                                <AddCircleOutlineOutlined id=\"btn-add-P\" onClick={this.handleBtnSize} fontSize=\"medium\" />\n                            </IconButton>\n                        </div>\n                        {this.renderQtdP()}\n                    </div>\n\n                    <div className=\"sectionSize\">\n                        <Typography >M</Typography>\n                        <Typography>{this.state.valueM}</Typography>\n                        <div className=\"btnsAddOrRemove\">\n                            <IconButton color=\"gray\" aria-label=\"add order\" component=\"span\">\n                                <RemoveCircleOutlineOutlined id=\"btn-remove-M\" onClick={this.handleBtnSize} fontSize=\"medium\" />\n                            </IconButton>\n                            <IconButton color=\"gray\" aria-label=\"add order\" component=\"span\">\n                                <AddCircleOutlineOutlined id=\"btn-add-M\" onClick={this.handleBtnSize} fontSize=\"medium\" />\n                            </IconButton>\n                        </div>\n                        {this.renderQtdM()}\n                    </div>\n\n                    <div className=\"sectionSize\">\n                        <Typography >G</Typography>\n                        <Typography>{this.state.valueG}</Typography>\n                        <div className=\"btnsAddOrRemove\">\n                            <IconButton color=\"gray\" aria-label=\"add order\" component=\"span\">\n                                <RemoveCircleOutlineOutlined id=\"btn-remove-G\" onClick={this.handleBtnSize} fontSize=\"medium\" />\n                            </IconButton>\n                            <IconButton color=\"gray\" aria-label=\"add order\" component=\"span\">\n                                <AddCircleOutlineOutlined id=\"btn-add-G\" onClick={this.handleBtnSize} fontSize=\"medium\" />\n                            </IconButton>\n                        </div>\n                        {this.renderQtdG()}\n                    </div>\n                </div>\n                {this.renderSubTotalItem()}\n            </div>\n        );\n    }\n}\n\n/*\n<FormControl variant=\"outlined\">\n                        <InputLabel id=\"select-sizes-label\">Tamanho</InputLabel>\n                        <Select className=\"selectInput\" label=\"Tamanho\" labelId=\"select-outlined-label\"\n                            id=\"select-sizes\"\n                            value={this.state.size}\n                            onChange={this.chooseSelect} >\n\n                            <MenuItem value=\"P\">P {this.state.valueP}</MenuItem>\n                            <MenuItem value=\"M\">M {this.state.valueM}</MenuItem>\n                            <MenuItem value=\"G\">G {this.state.valueG}</MenuItem>\n                        </Select>\n                        </FormControl>\n\n                        <FormControl >\n                        <TextField className=\"numberInput\"\n                            variant=\"outlined\"\n                            id=\"outlined-number\"\n                            label=\"Qtd.\"\n                            type=\"number\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={this.handleInputNumber} />\n                    </FormControl>\n\n\n*/","import React, { Component } from 'react';\nimport {\n    ExpansionPanel,\n    ExpansionPanelSummary,\n    ExpansionPanelDetails,\n    Typography,\n    Divider,\n    }from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Col from 'react-bootstrap/Col';\nimport SectionItem from '../components/SectionItem';\nimport '../styles/Section.css';\n\n\nconst valueItems = [\n    { item: \"Misto\",\n      ingredients:\"Queijo, Verduras, Maionese Temperada, Ketchup\",\n      valorP: \"R$2.50\", valorM: \"R$3.50\", valorG: \"R$4.50\" },\n    \n    { item: \"Hamburger\",\n      ingredients:\"Carne, Verduras, Maionese Temperada, Ketchup \",\n      valorP: \"R$2.50\", valorM: \"R$3.50\", valorG: \"R$4.50\" },\n\n    { item: \"Presburg\",\n      ingredients:\"Presunto, Carne, Verduras, Maionese Temperada, Ketchup \",\n      valorP: \"R$3.00\", valorM: \"R$4.50\", valorG: \"R$5.00\" },\n    \n    { item: \"California\",\n      ingredients:\"Carne, Queijo, Presunto, Verduras, Maionese Temperada, Ketchup \",\n      valorP: \"R$3.50\", valorM: \"R$5.50\", valorG: \"R$6.50\" },\n\n    { item: \"Egg-California\",\n      ingredients:\"Ovo, Carne, Queijo, Presunto, Verduras, Maionese Temperada, Ketchup \",\n      valorP: \"R$4.00\", valorM: \"R$6.00\", valorG: \"R$7.00\" },\n    \n    { item: \"Egg-Burg\",\n      ingredients:\"Ovo, Carne, Verduras, Maionese Temperada, Ketchup \",\n      valorP: \"R$3.00\", valorM: \"R$4.50\", valorG: \"R$5.50\" },\n    \n    { item: \"X-EggBurg\",\n      ingredients:\"Carne, Ovo, Verduras, Maionese Temperada, Ketchup \",\n      valorP: \"R$3.50\", valorM: \"R$5.50\", valorG: \"R$6.50\" },\n\n    { item: \"X-Calabresa\",\n      ingredients:\"Calabresa, Quejo, Presunto, Verduras, Maionese Temperada, Ketchup\",\n      valorP: \"R$3.50\", valorM: \"R$5.50\", valorG: \"R$6.50\" },\n    \n    { item: \"A Moda!\",\n      ingredients:\"Carne, Calabresa, Ovo, Queijo, Presunto, Verduras, Maionese Temperada, Ketchup \",\n      valorP: \"R$5.00\", valorM: \"R$7.50\", valorG: \"R$9.00\" },\n]\n\nexport default class Section extends Component {\n    constructor(props) {\n        super(props);\n\n        const { nameSection } = this.props;\n\n        this.items = [3]\n\n        this.state = {\n            nameSection: nameSection,\n            itemsOrder: []\n        };\n    }\n\n    getSizesString = (qtdP, qtdM, qtdG) => {\n        let tamanhos = \" \"\n        if(qtdP > 0){\n            tamanhos += \"P -- qtd:\"+qtdP+\", \";\n        }\n        if(qtdM > 0){\n            tamanhos += \"M -- qtd:\"+qtdM+\", \";\n        }\n        if(qtdG > 0){\n            tamanhos += \"G -- qtd:\"+qtdG+\" \";\n        }\n\n        return tamanhos;\n    }\n\n    getOrderItem = (state) => {\n        const ordersItem = this.state.itemsOrder;\n        const { nameItem, qtdP, qtdM, qtdG, subTotal } = state;\n        \n        \n        let tamanhos = this.getSizesString(qtdP,qtdM,qtdG);\n        let pedido = \"%20%7C%20*Item:* \" + nameItem + \"%20%7C%20*Tamanho:* \" + tamanhos;\n\n        if (ordersItem.length === 0) {\n            ordersItem.push(pedido);\n        }\n\n        if (!ordersItem.find(item => item.match(nameItem))) {\n            ordersItem.push(pedido);\n        }\n        else {\n            ordersItem.forEach((item, index) => {\n                if (ordersItem[index].match(nameItem)) {\n                    if( (qtdP === 0 ) && (qtdM === 0) && (qtdG === 0) ){\n                        ordersItem[index] = \"\";\n                    }else {\n                        ordersItem[index] = pedido;\n                    }\n                }\n            });\n        }\n\n        this.setState({ itemsOrder: ordersItem },\n            () => {\n                const state = this.state;\n                this.props.getValueSection(state)\n            }\n        );\n\n\n    }\n\n    renderItems = () => {\n        let items = valueItems.map((item, index) => {\n            return (\n                <div>\n                    <SectionItem ref={item => this.items[index] = item} item={item} key={'item' + index} getOrderItem={this.getOrderItem.bind(this)} />\n                    <Divider style={{ margin: 10 }} />\n                </div>\n            );\n        });\n\n        return items;\n    }\n\n    render() {\n\n        return (\n            <ExpansionPanel>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\" >\n                    <Typography className=\"titleSection\" variant='h6'>{this.state.nameSection}</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Col>\n                        {this.renderItems()}\n                    </Col>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Section from '../components/Section';\nimport {FormControl,\n        TextField,\n        Grid } from '@material-ui/core';\n\n\n\n\nexport default class FormTemplate extends Component {\n    constructor(props) {\n        super(props);\n\n        this.items = [3]\n\n        this.state = {\n            custumer: \"\",\n            end: \"\",\n            complement: \"\",\n            itemsOrder: []\n        };\n    }\n\n    getValueSection = (state) => {\n        const { itemsOrder } = state;\n        this.setState({itemsOrder: itemsOrder},\n            () => {\n                const state = this.state;\n                this.props.getOrderByClient(state)\n            });    \n    }\n\n    handleInput = (e) => {\n        if(e.target.id === \"input-nome\"){\n            this.setState({ custumer: e.target.value}, () => {console.log(this.state)});\n        }\n        if(e.target.id === \"input-endereco\"){\n            this.setState({ end: e.target.value}, () => {console.log(this.state)});\n        }\n        if(e.target.id === \"input-complemento\"){\n            this.setState({ complement: e.target.value}, \n                () => {\n                    const state = this.state;\n                    this.props.getOrderByClient(state)\n                });\n        }\n    }\n\n\nrender() {\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <FormControl >\n                    <TextField style={styles.inputText}\n                        id=\"input-nome\"\n                        label=\"Nome Cliente\"\n                        helperText=\"Este campo é importante!\"\n                        variant=\"outlined\"\n                        onChange= {this.handleInput}/>\n                </FormControl>\n            </Grid>\n\n            <Grid item xs={12}>\n                <FormControl >\n                    <TextField style={styles.inputText}\n                        id=\"input-endereco\"\n                        label=\"Endereço\"\n                        helperText=\"Este campo é importante!\"\n                        placeholder=\"Rua xxxx, 10000, Localidade\"\n                        variant=\"outlined\"\n                        onChange= {this.handleInput} />\n                </FormControl>\n\n                <FormControl >\n                    <TextField style={styles.inputText}\n                        id=\"input-complemento\"\n                        label=\"Complemento\"\n                        helperText=\"Este campo é importante!\"\n                        placeholder=\"Ponto de referência\"\n                        variant=\"outlined\"\n                        onChange= {this.handleInput} />\n                </FormControl>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Section nameSection=\"Hamburgers\" getValueSection={this.getValueSection.bind(this)}/>\n            </Grid>\n        </Grid>\n    );\n}\n}\n\nconst styles = {\n    inputText: {\n        margin: 5,\n    },\n}","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Col } from 'react-bootstrap';\nimport FormTemplate from './components/Form';\nimport { Button } from '@material-ui/core';\nimport logoMiniburg from './imgs/logoMiniburg.png';\nimport './styles/App.css';\n\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      custumer: \"\",\n      end: \"\",\n      complement: \"\",\n      itemsOrder: \"\",\n      formVerify: false,\n\n    };\n  }\n\n  getUrl = () => {\n    let url = \"\";\n\n    if (window.innerWidth > 667) {\n      url = \"https://web.whatsapp.com/send?phone=558881411861&text=\"\n    }\n    else {\n      url = \"https://api.whatsapp.com/send?phone=558881411861&text=\"\n    }\n\n\n    let msg = \"%20%7C%20*Cliente:* \" + this.state.custumer\n      + \"%20%7C%20*Endereço:* \" + this.state.end\n      + \"%20%7C%20*Complemento:* \" + this.state.complement\n      + \"%20%7C%20*Itens:*%5B \" + this.state.itemsOrder + \" %5D\";\n\n    url = url + msg;\n\n    return url;\n\n  }\n\n  getOrderByClient = (state) => {\n    const { custumer, end, complement, itemsOrder } = state;\n\n    this.setState({\n      custumer: custumer,\n      end: end,\n      complement: complement,\n      itemsOrder: itemsOrder,\n    }, () => { console.log(this.state) });\n\n  }\n\n  renderSendWhatsApp = () => {\n    const { custumer, end, complement, itemsOrder } = this.state;\n    if ((custumer === \"\") || (end === \"\") || (complement === \"\")) {\n      return (\n        <Button disabled\n          href=\"#\"\n          variant=\"outlined\"\n          color=\"primary\" >\n          Enviar para WhatsApp\n        </Button>\n      );\n\n    }\n    return <Button\n      href={this.getUrl()}\n      variant=\"outlined\"\n      color=\"primary\" >\n      Enviar para WhatsApp\n    </Button>\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container className=\"container\">\n          <Col>\n            <img className=\"logo\" src={logoMiniburg}\n              alt=\"Miniburg\"\n            />\n            <FormTemplate getOrderByClient={this.getOrderByClient.bind(this)} />\n\n            <br />\n\n            {this.renderSendWhatsApp()}\n\n\n          </Col>\n        </Container>\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}